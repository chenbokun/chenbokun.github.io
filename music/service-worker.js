"use strict";var precacheConfig=[["/index.html","9a0de1548188f2d7112c8f513be66fb8"],["/static/css/main.d37685e3.css","28589afaa80ae1bbefa78b774cdfa219"],["/static/js/main.8762c997.js","cdddff32535964860a7dccaae77d844a"],["/static/media/back.fb035bba.svg","fb035bba75816e1d9a1ba2bfe156d97b"],["/static/media/down.4aeb6784.svg","4aeb6784ff511fefd16765345a72bf42"],["/static/media/goBack.34fd2510.svg","34fd2510a9408993f95f7fc92f8a7c58"],["/static/media/headphones.048dcedd.svg","048dcedd05b0bbb7b373b920df44db4c"],["/static/media/like-1.a932a610.svg","a932a610b768667ededaf32e7b69c2dc"],["/static/media/like-2.f610b6c8.svg","f610b6c8b93fb63e058c75fe63ac5d33"],["/static/media/logo.5d5d9eef.svg","5d5d9eefa31e5e13a6610d9fa7a283bb"],["/static/media/menu.77efa386.svg","77efa38632025ea3727a2816d2e3a4fe"],["/static/media/next.daec378b.svg","daec378ba89a483612688707d40f9eb7"],["/static/media/pause-big.bc85552c.svg","bc85552cf2553b9707ea25e543a46e01"],["/static/media/pause.99413cd0.svg","99413cd04944b550a638323ca39d6ba6"],["/static/media/play-big.e7d8ac2f.svg","e7d8ac2fc5ff034ec1478f9e76bd7775"],["/static/media/play.cc13c450.svg","cc13c450fb8c4ca72458211a39cba375"],["/static/media/random.80572b03.svg","80572b039f0f3db33f775b2bd51b2d54"],["/static/media/search.42cd5fb8.svg","42cd5fb89120a6b4c33f4ff03c8c69df"],["/static/media/welcome.62365cfc.jpg","62365cfcba7307bd097106bcf632f112"],["/static/media/welcome_bottom.a8a35bc4.jpg","a8a35bc480efaad9997218520634b739"],["/static/media/welcome_top.5aa7f5ca.jpg","5aa7f5ca4d81d22c062f18724b5b9d87"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,n),e=urlsToCacheKeys.has(t));var c="/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});